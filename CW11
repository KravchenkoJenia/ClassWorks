#include <iostream>
#include <cstdlib>
using namespace std;


int main() {
    int s;
    cout << ("Enter number of elements of the array : ");
    cin >> s;
    if (s > 0) {
        int* a = (int*) calloc(s, sizeof *a);
        if (a) {
            int sum = 0;
            for (int i = 0; i < s; i++) {
                cout << "a[" << i+1 << "] = ";
                cin >> a[i];
                sum += a[i] * a[i];
            }
            cout << " The sum of the squares of all elements of the array : " << sum << endl;
            free(a);
        }
    }
    return 0;
}

//////////////////////

#include <iostream>
#include <cstdlib>
#include <cmath>
using namespace std;

int Input(int** a) {
    *a = (int*) malloc(0 * sizeof **a);
    int n = 0;
    if (*a) {
        while (n < 100) {
            int m;
            cout << "Enter a[" << n+1 <<"] element: ";
            cin >> m;
            if (m == 0)
                break;
            n+=1;
            *a = (int*) realloc(*a, n * sizeof **a);
            if (*a == nullptr)
                exit(1);
            (*a)[n - 1] = m;
        }
    }
    return n;
}

void num( int n) {
    int k = 0;
    for (int i = 0; i <= n; i++)
        k += 1;
    cout<<k;
}


int num_of_squares(int* a, int n) {
    int k = 0;
    for (int i = 0; i < n; i++) {
        double sq = sqrt(a[i]);
        if (sq == floor(sq))
            k += 1;
    }
    return k;
}


int num_of_cubes(int* a, int n) {
    int k = 0;
    for (int i = 0; i < n; i++) {
        double cb = cbrt(a[i]);
        if (cb == floor(cb))
            k += 1;
    }
    return k;
}


int main() {
    int* a, n;
    n= Input(&a);
    cout<<"Number of elements: ";
    num(n);
    cout << endl << "Number of full squares : " << num_of_squares(a, n) << endl;
    cout << "Number of full cubes : " << num_of_cubes(a, n) << endl;
    free(a);


    return 0;
}

////////////////////////

#include <iostream>
#include <cstdlib>
using namespace std;

int* Input(unsigned n){
    int * v = (int*)malloc(sizeof(int) * n);
    for (int i = 0; i < n; i++){
        cout << "v[" << i + 1 << "] " << " = ";
        cin >> v[i];
    }
    return v;
}

int* substructure(const int *a, const int *b, int n){
    int* dif = (int*) malloc(sizeof(int) * n);
    for (int i = 0; i < n; i++){
        dif[i] = a[i] - b[i];
    }
    return dif;
}

int main(){
    int n;
    cout << "Enter number of elements in both vectors : ";
    cin >> n;
    int *a, *b, *dif;
    cout<<"Enter  first vector :\t" << endl;
    a = Input(n);
    cout<<"Enter second vector :\t " << endl;
    b = Input(n);
    dif = substructure(a,b,n);
    for (int i = 0; i<n; i++){
        cout<< endl << " dif["<< i + 1 << "] " << " = "<< dif[i];
    }
    free(a);
    free(b);
    free(dif);
}

///////////////////////

#include <iostream>
#include <cstdlib>
using namespace std;

int** Create(int n) {
    int** a = (int**) malloc(n * sizeof *a);
    if (a == nullptr)
        exit(1);
    for (int i = 0; i < n; i++) {
        a[i] = (int*) calloc(n, sizeof **a);
        if (a[i] == nullptr)
            exit(1);
    }
    return a;
}

int** Multiply(int** a, int** b, int n) {
    int** c = Create(n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            for (int k = 0; k < n; k++)
                c[i][j] += a[i][k] * b[k][j];
        }
    }
    return c;
}

void Out(int** a, int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << a[i][j] <<" ";
        }
        cout << endl;
    }
    cout << endl;
}

int** Input(int n) {
    int** a = Create(n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout<<"matrix["<<i+1<<"]"<<"["<<j+1<<"] = ";
            cin >> a[i][j];
        }
    }
    return a;
}

int main() {
    int n;
    cout<<"n = ";
    cin >> n;
    cout << "First matrix : " << endl;
    int** a = Input(n);
    cout << "Second matrix : " << endl;
    int** b = Input(n);
    cout << "Multiply Matrix :" << endl;
    int** c = Multiply(a, b, n);
    Out(c, n);
    return 0;
}
